{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SingedOutLinks","Navbar","_this$props","this","links","uid","SignedInLinks","SignedOutLinks","Link","Component","state","firebaseReducer","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","projectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","id","ProjectSummary","Dashboard","projects_ProjectList","dashboard_Notifications","compose","firestoreReducer","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","Redirect","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","authReducer","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","lastName","firstName","signUp","newUser","_ref3","getFirestore","firebase","firestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialState","projectReducer","arguments","length","undefined","action","message","rootReducer","combineReducers","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","providerApp","es","src_App_0","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.02c3ec81.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from \"../../store/actions/authActions\";\r\n\r\nconst SingedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log out</a></li>\r\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n};\r\nconst initMapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n};\r\nexport default connect(null, initMapDispatchToProps) (SingedInLinks);","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(()=> dispatch({type: 'LOGIN_SUCCESS'}))\r\n      .catch((error)=>dispatch({type: 'LOGIN_ERROR', error}))\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut()\r\n      .then(()=>dispatch({type: 'SIGNOUT_SUCCESS'}))\r\n  }\r\n};\r\n\r\nexport const signUp = (newUser ) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp)=> {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        })\r\n          .then(()=>dispatch({type: 'SIGNIN_SUCCESS'}))\r\n          .catch((error)=>dispatch({type: 'SIGNIN_ERROR', error}))\r\n      })\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SingedOutLinks = (props) => {\r\n  return (\r\n    <ul className=\"right hide-on-med-and-down\">\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Sign In</NavLink></li>\r\n    </ul>\r\n  )\r\n};\r\nexport default SingedOutLinks;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SingedInLinks from \"./SignedInLinks\";\r\nimport SingedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const {auth, profile} = this.props;\r\n    const links = auth.uid ? <SingedInLinks profile={profile}/> : <SingedOutLinks/>;\r\n    return (\r\n      <nav>\r\n        <div className=\"nav-wrapper grey darken-3\">\r\n          <Link to=\"/\" className=\"m2 left\">THIEULUAN</Link>\r\n          {links}\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst initMapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebaseReducer.auth,\r\n    profile: state.firebaseReducer.profile\r\n  }\r\n};\r\n\r\nexport default connect(initMapStateToProps) (Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props;\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Notification</span>\r\n            <ul className=\"notification\">\r\n              {notifications && notifications.map(item => {\r\n                return (\r\n                  <li key={item.key}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n};\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst projectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default projectSummary;","import React from 'react';\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n      <div className=\"project-list section\">\r\n        { projects && projects.map(project => {\r\n          return (\r\n            <Link to={'/project/' + project.id}>\r\n              <ProjectSummary project={project} key={project.id}/>\r\n            </Link>\r\n          )\r\n        }) }\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass Dashboard extends Component{\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst initMapStateToProps = (state) => {\r\n  //console.log(state)\r\n  return {\r\n    projects: state.firestoreReducer.ordered.projects,\r\n    auth: state.firebaseReducer.auth,\r\n    notifications: state.firestoreReducer.ordered.notifications\r\n  }\r\n};\r\nexport default compose(\r\n  connect(initMapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notitfications', limit: 5, orderBy: ['time', 'desc']}\r\n  ])\r\n) (Dashboard);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nclass  ProjectDetails extends Component {\r\n  render() {\r\n    const {project, auth} =this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to='/signin' />\r\n    }\r\n    if(project) {\r\n      return (\r\n        <div className=\"container project-detail section\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              {project.title}\r\n            </span>\r\n              <p>\r\n                {project.content}\r\n              </p>\r\n            </div>\r\n            <div className=\"card-action lighten-4 grey-text grey\">\r\n              <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <p>Loading ...</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nconst initMapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestoreReducer.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebaseReducer.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(initMapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {signIn} from \"../../store/actions/authActions\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  };\r\n  render() {\r\n    const {authError, auth} = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to='/' />\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst initMapStateToProps = (state) => {\r\n  return {\r\n    authError: state.authReducer.authError,\r\n    auth: state.firebaseReducer.auth\r\n  }\r\n};\r\nconst initMapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n};\r\nexport default connect(initMapStateToProps, initMapDispatchToProps)(SignIn);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {signUp} from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    lastName: '',\r\n    firstName: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to='/' />\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nconst initMapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebaseReducer.auth\r\n  }\r\n};\r\nconst initMapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n};\r\nexport default connect(initMapStateToProps, initMapDispatchToProps) (SignUp);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from \"../../store/actions/projectActions\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  };\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to='/signin' />\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Thread</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nconst initMapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebaseReducer.auth\r\n  }\r\n};\r\nconst initMapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n};\r\nexport default connect(initMapStateToProps, initMapDispatchToProps) (CreateProject);","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebaseReducer.profile;\r\n    const authorId = getState().firebaseReducer.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(()=>{\r\n      dispatch({ type: 'ADD_PROJECT', project})\r\n    }).catch((error)=>{\r\n      dispatch({ type: 'ADD_PROJECT_ERROR', error})\r\n    });\r\n  }\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  projects: [\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the starts', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with me', content: 'blah blah blah'}\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PROJECT':\r\n      return state;\r\n    case 'ADD_PROJECT_ERROR':\r\n      console.log('create project error ', action.error);\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","const initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = ( state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: 'login error'\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      return state;\r\n    case 'SIGNIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNIN_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.error.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\nimport projectReducer from \"./projectReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nconst rootReducer = combineReducers({\r\n  authReducer: authReducer,\r\n  projectReducer: projectReducer,\r\n  firestoreReducer: firestoreReducer,\r\n  firebaseReducer: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyA1VJ4NZAhXZcAd2uDiE4EH4U1gJb3PBJw\",\r\n  authDomain: \"ntl001-186700.firebaseapp.com\",\r\n  databaseURL: \"https://ntl001-186700.firebaseio.com\",\r\n  projectId: \"ntl001-186700\",\r\n  storageBucket: \"ntl001-186700.appspot.com\",\r\n  messagingSenderId: \"1046784496397\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\nexport default firebase;","import '../node_modules/materialize-css/dist/css/materialize.min.css';\nimport '../node_modules/materialize-css/dist/js/materialize.min.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users'})\n  )\n);\n\n  const providerApp = (\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  );\n  ReactDOM.render(providerApp, document.getElementById('root'));\n\n  serviceWorker.register();\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}